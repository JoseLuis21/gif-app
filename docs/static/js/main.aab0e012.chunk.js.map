{"version":3,"sources":["firebase/firebase-config.js","types/authTypes.js","types/loadingTypes.js","types/errorTypes.js","actions/ui.js","actions/auth.js","components/auth/LoginPage.js","hooks/useForm.js","components/auth/RegisterPage.js","routers/AuthRouter.js","routers/PrivateRoute.js","components/gif/AddCategory.js","helpers/getGifs.js","components/gif/GifGridItem.js","components/gif/GifGrid.js","hooks/useFetchGifs.js","components/gif/GifPage.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducers.js","store/store.js","reducers/authReducers.js","GifApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","authTypes","loadingTypes","errorTypes","uiFinishLoading","type","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","catch","e","Swal","fire","title","text","icon","confirmButtonText","displayName","payload","logout","LoginPage","useDispatch","loading","useSelector","state","ui","initialState","useState","values","setValues","target","name","value","useForm","formValues","handleInputChange","className","onSubmit","event","preventDefault","id","onChange","placeholder","required","disabled","onClick","signInWithPopup","RegisterPage","AuthRouter","path","exact","to","PrivateRoute","isAuthenticated","Component","component","rest","props","AddCategory","setCategories","inputValue","setInputValue","trim","length","cats","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGridItem","src","alt","GifGrid","setState","useEffect","imgs","useFetchGifs","GifPage","categories","signOut","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","msgError","reducers","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","GifApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aab0e012.chunk.js","sourcesContent":["import  firebase  from \"firebase/app\";    \r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDPWxFud-iEAmc-9vuHZm5KvOevS9HP3tU\",\r\n    authDomain: \"react-app-escalab.firebaseapp.com\",\r\n    projectId: \"react-app-escalab\",\r\n    storageBucket: \"react-app-escalab.appspot.com\",\r\n    messagingSenderId: \"1041021507893\",\r\n    appId: \"1:1041021507893:web:c491f07dc68338c77e147c\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const authTypes = {\r\n\r\n    login : '[Auth Login]',\r\n    logout : '[Auth Logout]',\r\n   \r\n}\r\n","export const loadingTypes = {\r\n    uiStartLogin : '[UI] Start Loading',\r\n    uiFinishLogin : '[UI] Finish Loading'\r\n}","export const errorTypes = {\r\n    uiSetError : '[UI] Set error',\r\n    uiRemoveError : '[UI] Remove error'\r\n}","import { loadingTypes } from \"../types/loadingTypes\"\r\nimport { errorTypes } from \"../types/errorTypes\"\r\n\r\n\r\nexport const uiStartLoading = () => ({\r\n    type: loadingTypes.uiStartLogin\r\n})\r\n\r\n\r\nexport const uiFinishLoading = () => ({\r\n    type: loadingTypes.uiFinishLogin\r\n})\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: errorTypes.uiSetError,\r\n    payload: err\r\n})\r\n\r\n\r\nexport const removeError = () => ({\r\n    type: errorTypes.uiRemoveError\r\n})","import Swal from 'sweetalert2'\r\nimport { authTypes } from \"../types/authTypes\";\r\nimport { uiFinishLoading, uiStartLoading } from \"./ui\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( uiStartLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch( login(user.uid, 'jose') );\r\n\r\n                dispatch( uiFinishLoading() );\r\n\r\n            }).catch( e => {\r\n                // console.error(e)\r\n\r\n                Swal.fire({\r\n                    title: 'Error!',\r\n                    text: e,\r\n                    icon: 'error',\r\n                    confirmButtonText: 'OK'\r\n                  })\r\n\r\n                dispatch( uiFinishLoading() );\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then( ({user}) => {\r\n            dispatch(login(user.uid, user.displayName))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: authTypes.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }   \r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: authTypes.logout\r\n});\r\n\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector( state => state.ui );\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'escalab@gmail.com',\r\n        password: '123456'\r\n    })\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password))\r\n    }\r\n\r\n    const handleGoogleLogin = (event) => {\r\n        event.preventDefault();\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                    <div className=\"card card-signin my-5\">\r\n                        <div className=\"card-body\">\r\n                            <h2 className=\"card-title text-center\">Iniciar sesion</h2>\r\n                            <form className=\"form-signin\" onSubmit={ handleLogin } >\r\n\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"email\" id=\"inputEmail\" className=\"form-control\" name=\"email\" value={email} onChange={ handleInputChange} placeholder=\"Email address\" required />\r\n                                    <label >Email address</label>\r\n                                </div>\r\n\r\n                                <div className=\"form-label-group\">\r\n                                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" name=\"password\" value={password} onChange={ handleInputChange} placeholder=\"Password\" required />\r\n                                    <label >Password</label>\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" disabled={loading} >Iniciar sesion</button>\r\n                                \r\n                                <hr className=\"my-4\" />\r\n\r\n                                <button className=\"btn btn-lg btn-primary btn-block text-uppercase\"  onClick={ handleGoogleLogin } ><i className=\"fab fa-google mr-2\"></i> Sign in with Google</button>                                \r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\n\r\nexport const RegisterPage = () => {\r\n    return (\r\n        <div>\r\n            Register Page\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { LoginPage } from '../components/auth/LoginPage'\r\nimport { RegisterPage } from '../components/auth/RegisterPage'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/auth/login\" exact>\r\n                    <LoginPage />\r\n                </Route>\r\n                <Route path=\"/auth/register\" exact>\r\n                    <RegisterPage />\r\n                </Route>\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState(''); // ''\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats, ] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=5&api_key=TtJ29sB0NxRh2NkE73VtOvEoFeEtZRNR`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}\n\n\n","import React, { useState } from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startLogout } from '../../actions/auth';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\n\r\nexport const GifPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball Z', 'Madara']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Escalab Gif Search... Escribe y presiona enter para buscar</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category  => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" onClick={ handleLogout }>Salir</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { login } from \"../actions/auth\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { useDispatch } from 'react-redux';\r\nimport { GifPage } from \"../components/gif/GifPage\";\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n            if(user?.uid){\r\n                dispatch( login(user.uid, user.displayName) );\r\n                setIsLoggedIn(true);\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n        })\r\n    }, [dispatch, setChecking])\r\n\r\n    if( checking ){\r\n        return (\r\n            <h1>Espera un Momento....</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute path=\"/auth\" \r\n                        isAuthenticated={ isLoggedIn }\r\n                        component={ AuthRouter }                        \r\n                    >\r\n                    </PublicRoute>\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        component={ GifPage }\r\n                        >\r\n                    </PrivateRoute>\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { loadingTypes } from \"../types/loadingTypes\";\r\nimport { errorTypes } from \"../types/errorTypes\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n        case loadingTypes.uiStartLogin:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case loadingTypes.uiFinishLogin:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case errorTypes.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case errorTypes.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n      default:\r\n          return state;\r\n  }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { authReducers } from \"../reducers/authReducers\";\r\nimport { uiReducer } from \"../reducers/uiReducers\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducers,\r\n    ui: uiReducer\r\n});\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(ReduxThunk)\r\n    )\r\n);","import { authTypes } from \"../types/authTypes\";\r\n\r\n\r\nexport const authReducers = ( state = {}, action ) => {\r\n  switch ( action.type ) {\r\n      case authTypes.login:\r\n          return {\r\n              uid: action.payload.uid,\r\n              name: action.payload.displayName,\r\n          }\r\n      case authTypes.logout:\r\n          return { }\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const GifApp = () => {\r\n    return (\r\n        <Provider store={ store }>            \r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifApp } from './GifApp';\n\nimport \"./styles/styles.scss\";\n\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}